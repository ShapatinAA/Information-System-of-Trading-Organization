{"ast":null,"code":"var _jsxFileName = \"D:\\\\InformationSystemTradingOrganization\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport jwtDecode from 'jwt-decode'; // Use named import 'jwtDecode'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    token: localStorage.getItem('token'),\n    roles: []\n  });\n  const login = token => {\n    localStorage.setItem('token', token);\n    const decodedToken = jwtDecode(token); // Use 'jwtDecode' instead of 'jwt_decode'\n    setAuth({\n      token,\n      roles: decodedToken.roles\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setAuth({\n      token: null,\n      roles: []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"1GHPSjE28QM1Wow5OVPts2gPWtA=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","token","localStorage","getItem","roles","login","setItem","decodedToken","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/InformationSystemTradingOrganization/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\nimport jwtDecode from 'jwt-decode'; // Use named import 'jwtDecode'\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ token: localStorage.getItem('token'), roles: [] });\r\n\r\n    const login = (token) => {\r\n        localStorage.setItem('token', token);\r\n        const decodedToken = jwtDecode(token); // Use 'jwtDecode' instead of 'jwt_decode'\r\n        setAuth({ token, roles: decodedToken.roles });\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setAuth({ token: null, roles: [] });\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ auth, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAErF,MAAMC,KAAK,GAAIJ,KAAK,IAAK;IACrBC,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IACpC,MAAMM,YAAY,GAAGf,SAAS,CAACS,KAAK,CAAC,CAAC,CAAC;IACvCD,OAAO,CAAC;MAAEC,KAAK;MAAEG,KAAK,EAAEG,YAAY,CAACH;IAAM,CAAC,CAAC;EACjD,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACjBN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCT,OAAO,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEG,KAAK,EAAE;IAAG,CAAC,CAAC;EACvC,CAAC;EAED,oBACIV,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,IAAI;MAAEM,KAAK;MAAEG;IAAO,CAAE;IAAAX,QAAA,EAChDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACjB,EAAA,CAnBIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}