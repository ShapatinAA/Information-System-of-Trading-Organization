{"ast":null,"code":"var _jsxFileName = \"D:\\\\InformationSystemTradingOrganization\\\\frontend\\\\src\\\\components\\\\Humans\\\\HumanForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createHuman, updateHuman, getHumans } from '../../services/api';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HumanForm = () => {\n  _s();\n  const [form, setForm] = useState({\n    name: ''\n  });\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const isEditing = Boolean(id);\n  useEffect(() => {\n    if (isEditing) {\n      fetchHuman();\n    }\n  }, [id]);\n  const fetchHuman = async () => {\n    const response = await getHumans();\n    const human = response.data.find(human => human.id === parseInt(id));\n    setForm({\n      name: human.name\n    });\n  };\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isEditing) {\n      await updateHuman(id, form);\n    } else {\n      await createHuman(form);\n    }\n    navigate('/humans');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: form.name,\n      onChange: handleChange,\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [isEditing ? 'Update' : 'Create', \" Human\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(HumanForm, \"uPGPw+AfNoqsjFCbgAT2/6L1aCQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = HumanForm;\nexport default HumanForm;\nvar _c;\n$RefreshReg$(_c, \"HumanForm\");","map":{"version":3,"names":["React","useState","useEffect","createHuman","updateHuman","getHumans","useNavigate","useParams","jsxDEV","_jsxDEV","HumanForm","_s","form","setForm","name","navigate","id","isEditing","Boolean","fetchHuman","response","human","data","find","parseInt","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/InformationSystemTradingOrganization/frontend/src/components/Humans/HumanForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { createHuman, updateHuman, getHumans } from '../../services/api';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst HumanForm = () => {\r\n    const [form, setForm] = useState({ name: '' });\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const isEditing = Boolean(id);\r\n\r\n    useEffect(() => {\r\n        if (isEditing) {\r\n            fetchHuman();\r\n        }\r\n    }, [id]);\r\n\r\n    const fetchHuman = async () => {\r\n        const response = await getHumans();\r\n        const human = response.data.find(human => human.id === parseInt(id));\r\n        setForm({ name: human.name });\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (isEditing) {\r\n            await updateHuman(id, form);\r\n        } else {\r\n            await createHuman(form);\r\n        }\r\n        navigate('/humans');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" name=\"name\" value={form.name} onChange={handleChange} placeholder=\"Name\" />\r\n            <button type=\"submit\">{isEditing ? 'Update' : 'Create'} Human</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default HumanForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,oBAAoB;AACxE,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,IAAI,EAAE;EAAG,CAAC,CAAC;EAC9C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,SAAS,GAAGC,OAAO,CAACF,EAAE,CAAC;EAE7Bd,SAAS,CAAC,MAAM;IACZ,IAAIe,SAAS,EAAE;MACXE,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMf,SAAS,CAAC,CAAC;IAClC,MAAMgB,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACF,KAAK,IAAIA,KAAK,CAACL,EAAE,KAAKQ,QAAQ,CAACR,EAAE,CAAC,CAAC;IACpEH,OAAO,CAAC;MAAEC,IAAI,EAAEO,KAAK,CAACP;IAAK,CAAC,CAAC;EACjC,CAAC;EAED,MAAMW,YAAY,GAAIC,CAAC,IAAK;IACxBb,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACc,CAAC,CAACC,MAAM,CAACb,IAAI,GAAGY,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EACzD,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIb,SAAS,EAAE;MACX,MAAMb,WAAW,CAACY,EAAE,EAAEJ,IAAI,CAAC;IAC/B,CAAC,MAAM;MACH,MAAMT,WAAW,CAACS,IAAI,CAAC;IAC3B;IACAG,QAAQ,CAAC,SAAS,CAAC;EACvB,CAAC;EAED,oBACIN,OAAA;IAAMsB,QAAQ,EAAEF,YAAa;IAAAG,QAAA,gBACzBvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACnB,IAAI,EAAC,MAAM;MAACc,KAAK,EAAEhB,IAAI,CAACE,IAAK;MAACoB,QAAQ,EAAET,YAAa;MAACU,WAAW,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9F9B,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAD,QAAA,GAAEf,SAAS,GAAG,QAAQ,GAAG,QAAQ,EAAC,QAAM;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEf,CAAC;AAAC5B,EAAA,CAtCID,SAAS;EAAA,QAEMJ,WAAW,EACbC,SAAS;AAAA;AAAAiC,EAAA,GAHtB9B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}