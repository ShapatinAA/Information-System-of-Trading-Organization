{"ast":null,"code":"var _jsxFileName = \"D:\\\\InformationSystemTradingOrganization\\\\frontend\\\\src\\\\components\\\\JobTypes\\\\AddJobType.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { createJobType, updateJobType, getJobTypeById } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddJobType = () => {\n  _s();\n  const [form, setForm] = useState({\n    name: ''\n  });\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const isEditing = Boolean(id);\n  useEffect(() => {\n    if (isEditing) {\n      fetchJobType();\n    }\n  }, [id]);\n  const fetchJobType = async () => {\n    try {\n      const response = await getJobTypeById(id);\n      setForm(response.data);\n    } catch (error) {\n      console.error('Failed to fetch job type', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (isEditing) {\n        await updateJobType(id, form);\n      } else {\n        await createJobType(form);\n      }\n      navigate('/job_types');\n    } catch (error) {\n      console.error('Failed to save job type', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: isEditing ? 'Edit Job Type' : 'Add New Job Type'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: form.name,\n          onChange: handleChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-dark\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark\",\n        style: {\n          marginLeft: '10px'\n        },\n        onClick: () => navigate('/job_types'),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(AddJobType, \"0wrWjEBSH/nXQ1OS1vZ63tMPbtA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = AddJobType;\nexport default AddJobType;\nvar _c;\n$RefreshReg$(_c, \"AddJobType\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","createJobType","updateJobType","getJobTypeById","jsxDEV","_jsxDEV","AddJobType","_s","form","setForm","name","navigate","id","isEditing","Boolean","fetchJobType","response","data","error","console","handleChange","e","value","target","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","style","marginLeft","onClick","_c","$RefreshReg$"],"sources":["D:/InformationSystemTradingOrganization/frontend/src/components/JobTypes/AddJobType.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { createJobType, updateJobType, getJobTypeById } from '../../services/api';\r\n\r\nconst AddJobType = () => {\r\n    const [form, setForm] = useState({\r\n        name: ''\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const isEditing = Boolean(id);\r\n\r\n    useEffect(() => {\r\n        if (isEditing) {\r\n            fetchJobType();\r\n        }\r\n    }, [id]);\r\n\r\n    const fetchJobType = async () => {\r\n        try {\r\n            const response = await getJobTypeById(id);\r\n            setForm(response.data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch job type', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setForm({ ...form, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (isEditing) {\r\n                await updateJobType(id, form);\r\n            } else {\r\n                await createJobType(form);\r\n            }\r\n            navigate('/job_types');\r\n        } catch (error) {\r\n            console.error('Failed to save job type', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>{isEditing ? 'Edit Job Type' : 'Add New Job Type'}</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={form.name}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-dark\">Save</button>\r\n                <button type=\"button\" className=\"btn btn-dark\" style={{ marginLeft: '10px' }} onClick={() => navigate('/job_types')}>Cancel</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddJobType;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}