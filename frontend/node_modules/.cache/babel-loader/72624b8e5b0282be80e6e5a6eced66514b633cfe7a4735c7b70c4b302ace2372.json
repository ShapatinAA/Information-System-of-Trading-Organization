{"ast":null,"code":"var _jsxFileName = \"D:\\\\InformationSystemTradingOrganization\\\\frontend\\\\src\\\\components\\\\Staff\\\\StaffSalariesByCriteria.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Table, Form, Pagination, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { getStaffSalariesByCriteria, getOutlets, getTypesOfTradingPlaces, getStaff, getHumanById } from '../../services/api';\nimport './StaffSalariesByCriteria.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StaffSalariesByCriteria = () => {\n  _s();\n  const [criteria, setCriteria] = useState({\n    outlet_id: '',\n    type_id: ''\n  });\n  const [outlets, setOutlets] = useState({});\n  const [types, setTypes] = useState({});\n  const [staffSalaries, setStaffSalaries] = useState([]);\n  const [staff, setStaff] = useState({});\n  const [humans, setHumans] = useState({});\n  const [totalStaffSalaries, setTotalStaffSalaries] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [recordPerPage] = useState(5);\n  useEffect(() => {\n    fetchInitialData();\n  }, []);\n  const fetchInitialData = async () => {\n    try {\n      const [outletsResponse, typesResponse, staffResponse] = await Promise.all([getOutlets(), getTypesOfTradingPlaces(), getStaff()]);\n      setOutlets(outletsResponse.data.reduce((acc, outlet) => ({\n        ...acc,\n        [outlet.id]: outlet\n      }), {}));\n      setTypes(typesResponse.data.reduce((acc, type) => ({\n        ...acc,\n        [type.id]: type\n      }), {}));\n      setStaff(staffResponse.data.reduce((acc, staffMember) => ({\n        ...acc,\n        [staffMember.id]: staffMember\n      }), {}));\n      const uniqueHumanIds = new Set(staffResponse.data.map(staffMember => staffMember.human_id));\n      const humanResponses = await Promise.all([...uniqueHumanIds].map(humanId => getHumanById(humanId)));\n      const humansTemp = humanResponses.reduce((acc, humanResponse) => {\n        const human = humanResponse.data;\n        acc[human.id] = human;\n        return acc;\n      }, {});\n      setHumans(humansTemp);\n    } catch (error) {\n      console.error('Failed to fetch initial data', error);\n    }\n  };\n  const handleChange = e => {\n    setCriteria({\n      ...criteria,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    fetchStaffSalaries(currentPage);\n  };\n  const fetchStaffSalaries = async page => {\n    try {\n      const response = await getStaffSalariesByCriteria({\n        ...criteria,\n        page,\n        limit: recordPerPage\n      });\n      setStaffSalaries(response.data);\n      setTotalStaffSalaries(response.data.length); // Adjust as needed\n      setTotalPages(Math.ceil(response.data.length / recordPerPage)); // Adjust as needed\n      setCurrentPage(page);\n    } catch (error) {\n      console.error('Failed to fetch staff salaries', error);\n    }\n  };\n  const handlePageChange = page => {\n    fetchStaffSalaries(page);\n  };\n  const renderTooltip = (props, obj) => /*#__PURE__*/_jsxDEV(Tooltip, {\n    id: \"button-tooltip\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      size: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(obj).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid staff-salaries-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Staff Salaries By Criteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Outlet:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"outlet_id\",\n          value: criteria.outlet_id,\n          onChange: handleChange,\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Outlet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), Object.entries(outlets).map(([id, outlet]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: outlet.name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"type_id\",\n          value: criteria.type_id,\n          onChange: handleChange,\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), Object.entries(types).map(([id, type]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: type.name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"btn btn-dark mt-2\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-4\",\n      children: [\"Total Staff: \", totalStaffSalaries]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), staffSalaries.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Staff Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Outlet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: staffSalaries.map(salary => {\n            var _humans$staff$salary$, _staff$salary$staff_i2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                placement: \"top\",\n                delay: {\n                  show: 250,\n                  hide: 400\n                },\n                overlay: props => {\n                  var _staff$salary$staff_i;\n                  return renderTooltip(props, humans[(_staff$salary$staff_i = staff[salary.staff_id]) === null || _staff$salary$staff_i === void 0 ? void 0 : _staff$salary$staff_i.human_id] || {});\n                },\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_humans$staff$salary$ = humans[(_staff$salary$staff_i2 = staff[salary.staff_id]) === null || _staff$salary$staff_i2 === void 0 ? void 0 : _staff$salary$staff_i2.human_id]) === null || _humans$staff$salary$ === void 0 ? void 0 : _humans$staff$salary$.name) || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: salary.salary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: salary.outlet_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)]\n            }, salary.staff_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n          onClick: () => handlePageChange(1),\n          disabled: currentPage === 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n          onClick: () => handlePageChange(currentPage - 1),\n          disabled: currentPage === 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), [...Array(totalPages).keys()].map(page => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: page + 1 === currentPage,\n          onClick: () => handlePageChange(page + 1),\n          children: page + 1\n        }, page + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n          onClick: () => handlePageChange(currentPage + 1),\n          disabled: currentPage === totalPages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n          onClick: () => handlePageChange(totalPages),\n          disabled: currentPage === totalPages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(StaffSalariesByCriteria, \"YvmeARDow3LIYzhFKCLR1Lszhmk=\");\n_c = StaffSalariesByCriteria;\nexport default StaffSalariesByCriteria;\nvar _c;\n$RefreshReg$(_c, \"StaffSalariesByCriteria\");","map":{"version":3,"names":["React","useState","useEffect","Button","Table","Form","Pagination","OverlayTrigger","Tooltip","getStaffSalariesByCriteria","getOutlets","getTypesOfTradingPlaces","getStaff","getHumanById","jsxDEV","_jsxDEV","Fragment","_Fragment","StaffSalariesByCriteria","_s","criteria","setCriteria","outlet_id","type_id","outlets","setOutlets","types","setTypes","staffSalaries","setStaffSalaries","staff","setStaff","humans","setHumans","totalStaffSalaries","setTotalStaffSalaries","currentPage","setCurrentPage","totalPages","setTotalPages","recordPerPage","fetchInitialData","outletsResponse","typesResponse","staffResponse","Promise","all","data","reduce","acc","outlet","id","type","staffMember","uniqueHumanIds","Set","map","human_id","humanResponses","humanId","humansTemp","humanResponse","human","error","console","handleChange","e","target","name","value","handleSubmit","preventDefault","fetchStaffSalaries","page","response","limit","length","Math","ceil","handlePageChange","renderTooltip","props","obj","children","striped","bordered","hover","variant","size","Object","entries","key","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onChange","salary","_humans$staff$salary$","_staff$salary$staff_i2","placement","delay","show","hide","overlay","_staff$salary$staff_i","staff_id","outlet_name","First","onClick","disabled","Prev","Array","keys","Item","active","Next","Last","_c","$RefreshReg$"],"sources":["D:/InformationSystemTradingOrganization/frontend/src/components/Staff/StaffSalariesByCriteria.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Table, Form, Pagination, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { getStaffSalariesByCriteria, getOutlets, getTypesOfTradingPlaces, getStaff, getHumanById } from '../../services/api';\r\nimport './StaffSalariesByCriteria.css';\r\n\r\nconst StaffSalariesByCriteria = () => {\r\n    const [criteria, setCriteria] = useState({\r\n        outlet_id: '',\r\n        type_id: ''\r\n    });\r\n    const [outlets, setOutlets] = useState({});\r\n    const [types, setTypes] = useState({});\r\n    const [staffSalaries, setStaffSalaries] = useState([]);\r\n    const [staff, setStaff] = useState({});\r\n    const [humans, setHumans] = useState({});\r\n    const [totalStaffSalaries, setTotalStaffSalaries] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [recordPerPage] = useState(5);\r\n\r\n    useEffect(() => {\r\n        fetchInitialData();\r\n    }, []);\r\n\r\n    const fetchInitialData = async () => {\r\n        try {\r\n            const [outletsResponse, typesResponse, staffResponse] = await Promise.all([\r\n                getOutlets(),\r\n                getTypesOfTradingPlaces(),\r\n                getStaff()\r\n            ]);\r\n            setOutlets(outletsResponse.data.reduce((acc, outlet) => ({ ...acc, [outlet.id]: outlet }), {}));\r\n            setTypes(typesResponse.data.reduce((acc, type) => ({ ...acc, [type.id]: type }), {}));\r\n            setStaff(staffResponse.data.reduce((acc, staffMember) => ({ ...acc, [staffMember.id]: staffMember }), {}));\r\n\r\n            const uniqueHumanIds = new Set(staffResponse.data.map(staffMember => staffMember.human_id));\r\n            const humanResponses = await Promise.all([...uniqueHumanIds].map(humanId => getHumanById(humanId)));\r\n            const humansTemp = humanResponses.reduce((acc, humanResponse) => {\r\n                const human = humanResponse.data;\r\n                acc[human.id] = human;\r\n                return acc;\r\n            }, {});\r\n            setHumans(humansTemp);\r\n        } catch (error) {\r\n            console.error('Failed to fetch initial data', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setCriteria({ ...criteria, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        fetchStaffSalaries(currentPage);\r\n    };\r\n\r\n    const fetchStaffSalaries = async (page) => {\r\n        try {\r\n            const response = await getStaffSalariesByCriteria({ ...criteria, page, limit: recordPerPage });\r\n            setStaffSalaries(response.data);\r\n            setTotalStaffSalaries(response.data.length);  // Adjust as needed\r\n            setTotalPages(Math.ceil(response.data.length / recordPerPage));  // Adjust as needed\r\n            setCurrentPage(page);\r\n        } catch (error) {\r\n            console.error('Failed to fetch staff salaries', error);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        fetchStaffSalaries(page);\r\n    };\r\n\r\n    const renderTooltip = (props, obj) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n            <Table striped bordered hover variant=\"dark\" size=\"sm\">\r\n                <tbody>\r\n                {Object.entries(obj).map(([key, value]) => (\r\n                    <tr key={key}>\r\n                        <td>{key}</td>\r\n                        <td>{value}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n        </Tooltip>\r\n    );\r\n\r\n    return (\r\n        <div className=\"container-fluid staff-salaries-container\">\r\n            <h3>Staff Salaries By Criteria</h3>\r\n            <Form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Outlet:</label>\r\n                    <select\r\n                        name=\"outlet_id\"\r\n                        value={criteria.outlet_id}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option value=\"\">Select Outlet</option>\r\n                        {Object.entries(outlets).map(([id, outlet]) => (\r\n                            <option key={id} value={id}>\r\n                                {outlet.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Type:</label>\r\n                    <select\r\n                        name=\"type_id\"\r\n                        value={criteria.type_id}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option value=\"\">Select Type</option>\r\n                        {Object.entries(types).map(([id, type]) => (\r\n                            <option key={id} value={id}>\r\n                                {type.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <Button type=\"submit\" className=\"btn btn-dark mt-2\">Search</Button>\r\n            </Form>\r\n            <h4 className=\"mt-4\">Total Staff: {totalStaffSalaries}</h4>\r\n            {staffSalaries.length > 0 && (\r\n                <>\r\n                    <Table striped bordered hover variant=\"dark\" className=\"mt-2\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Staff Name</th>\r\n                            <th>Salary</th>\r\n                            <th>Outlet</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {staffSalaries.map(salary => (\r\n                            <tr key={salary.staff_id}>\r\n                                <OverlayTrigger\r\n                                    placement=\"top\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(props) => renderTooltip(props, humans[staff[salary.staff_id]?.human_id] || {})}\r\n                                >\r\n                                    <td>{humans[staff[salary.staff_id]?.human_id]?.name || 'Unknown'}</td>\r\n                                </OverlayTrigger>\r\n                                <td>{salary.salary}</td>\r\n                                <td>{salary.outlet_name}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Pagination>\r\n                        <Pagination.First onClick={() => handlePageChange(1)} disabled={currentPage === 1} />\r\n                        <Pagination.Prev onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n                        {[...Array(totalPages).keys()].map(page =>\r\n                            <Pagination.Item key={page + 1} active={page + 1 === currentPage} onClick={() => handlePageChange(page + 1)}>\r\n                                {page + 1}\r\n                            </Pagination.Item>\r\n                        )}\r\n                        <Pagination.Next onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n                        <Pagination.Last onClick={() => handlePageChange(totalPages)} disabled={currentPage === totalPages} />\r\n                    </Pagination>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StaffSalariesByCriteria;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}