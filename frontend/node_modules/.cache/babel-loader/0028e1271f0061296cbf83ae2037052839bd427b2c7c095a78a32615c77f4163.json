{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useParams}from'react-router-dom';import{createStaff,updateStaff,getStaffById,getHumans,getJobTypes,getOutlets}from'../../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddStaff=()=>{const[form,setForm]=useState({job_type_id:'',human_id:'',outlet_id:'',salary:''});const[jobTypes,setJobTypes]=useState([]);const[humans,setHumans]=useState([]);const[outlets,setOutlets]=useState([]);const navigate=useNavigate();const{id}=useParams();const isEditing=Boolean(id);useEffect(()=>{fetchLists();if(isEditing){fetchStaff();}},[id]);const fetchLists=async()=>{try{const[jobTypesResponse,humansResponse,outletsResponse]=await Promise.all([getJobTypes(),getHumans(),getOutlets()]);setJobTypes(jobTypesResponse.data);setHumans(humansResponse.data);setOutlets(outletsResponse.data);}catch(error){console.error('Failed to fetch lists',error);}};const fetchStaff=async()=>{try{const response=await getStaffById(id);setForm(response.data);}catch(error){console.error('Failed to fetch staff member',error);}};const handleChange=e=>{const{name,value}=e.target;setForm({...form,[name]:value});};const handleSubmit=async e=>{e.preventDefault();try{if(isEditing){await updateStaff(id,form);}else{await createStaff(form);}navigate('/staff');}catch(error){console.error('Failed to save staff member',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:isEditing?'Edit Staff Member':'Add New Staff Member'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Job Type:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"job_type_id\",value:form.job_type_id,onChange:handleChange,className:\"form-control\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Job Type\"}),jobTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type.id,children:type.name},type.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Human:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"human_id\",value:form.human_id,onChange:handleChange,className:\"form-control\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Human\"}),humans.map(human=>/*#__PURE__*/_jsx(\"option\",{value:human.id,children:human.name},human.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Outlet:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"outlet_id\",value:form.outlet_id,onChange:handleChange,className:\"form-control\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Outlet\"}),outlets.map(outlet=>/*#__PURE__*/_jsx(\"option\",{value:outlet.id,children:outlet.name},outlet.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Salary:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"any\",name:\"salary\",value:form.salary,onChange:handleChange,className:\"form-control\",required:true,min:\"0\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-dark\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-dark\",style:{marginLeft:'10px'},onClick:()=>navigate('/staff'),children:\"Cancel\"})]})]});};export default AddStaff;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","createStaff","updateStaff","getStaffById","getHumans","getJobTypes","getOutlets","jsx","_jsx","jsxs","_jsxs","AddStaff","form","setForm","job_type_id","human_id","outlet_id","salary","jobTypes","setJobTypes","humans","setHumans","outlets","setOutlets","navigate","id","isEditing","Boolean","fetchLists","fetchStaff","jobTypesResponse","humansResponse","outletsResponse","Promise","all","data","error","console","response","handleChange","e","name","value","target","handleSubmit","preventDefault","className","children","onSubmit","onChange","required","map","type","human","outlet","step","min","style","marginLeft","onClick"],"sources":["D:/InformationSystemTradingOrganization/frontend/src/components/Staff/AddStaff.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { createStaff, updateStaff, getStaffById, getHumans, getJobTypes, getOutlets } from '../../services/api';\r\n\r\nconst AddStaff = () => {\r\n    const [form, setForm] = useState({\r\n        job_type_id: '',\r\n        human_id: '',\r\n        outlet_id: '',\r\n        salary: ''\r\n    });\r\n\r\n    const [jobTypes, setJobTypes] = useState([]);\r\n    const [humans, setHumans] = useState([]);\r\n    const [outlets, setOutlets] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const isEditing = Boolean(id);\r\n\r\n    useEffect(() => {\r\n        fetchLists();\r\n        if (isEditing) {\r\n            fetchStaff();\r\n        }\r\n    }, [id]);\r\n\r\n    const fetchLists = async () => {\r\n        try {\r\n            const [jobTypesResponse, humansResponse, outletsResponse] = await Promise.all([\r\n                getJobTypes(),\r\n                getHumans(),\r\n                getOutlets()\r\n            ]);\r\n            setJobTypes(jobTypesResponse.data);\r\n            setHumans(humansResponse.data);\r\n            setOutlets(outletsResponse.data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch lists', error);\r\n        }\r\n    };\r\n\r\n    const fetchStaff = async () => {\r\n        try {\r\n            const response = await getStaffById(id);\r\n            setForm(response.data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch staff member', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setForm({ ...form, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (isEditing) {\r\n                await updateStaff(id, form);\r\n            } else {\r\n                await createStaff(form);\r\n            }\r\n            navigate('/staff');\r\n        } catch (error) {\r\n            console.error('Failed to save staff member', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>{isEditing ? 'Edit Staff Member' : 'Add New Staff Member'}</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Job Type:</label>\r\n                    <select\r\n                        name=\"job_type_id\"\r\n                        value={form.job_type_id}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select Job Type</option>\r\n                        {jobTypes.map(type => (\r\n                            <option key={type.id} value={type.id}>\r\n                                {type.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Human:</label>\r\n                    <select\r\n                        name=\"human_id\"\r\n                        value={form.human_id}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select Human</option>\r\n                        {humans.map(human => (\r\n                            <option key={human.id} value={human.id}>\r\n                                {human.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Outlet:</label>\r\n                    <select\r\n                        name=\"outlet_id\"\r\n                        value={form.outlet_id}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select Outlet</option>\r\n                        {outlets.map(outlet => (\r\n                            <option key={outlet.id} value={outlet.id}>\r\n                                {outlet.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Salary:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        step=\"any\"\r\n                        name=\"salary\"\r\n                        value={form.salary}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        required\r\n                        min=\"0\"\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-dark\">Save</button>\r\n                <button type=\"button\" className=\"btn btn-dark\" style={{ marginLeft: '10px' }} onClick={() => navigate('/staff')}>Cancel</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddStaff;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}