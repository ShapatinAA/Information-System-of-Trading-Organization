{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Button,Table,Form,Pagination}from'react-bootstrap';import{getOutletTurnover,getTypesOfTradingPlaces}from'../../services/api';import'./OutletTurnover.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const OutletTurnover=()=>{const[criteria,setCriteria]=useState({start_date:'',end_date:'',type_id:''});const[typesOfTradingPlaces,setTypesOfTradingPlaces]=useState({});const[turnoverData,setTurnoverData]=useState([]);const[totalTurnover,setTotalTurnover]=useState(0);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(0);const[recordPerPage]=useState(5);const[message,setMessage]=useState('');useEffect(()=>{fetchInitialData();},[]);const fetchInitialData=async()=>{try{const typesResponse=await getTypesOfTradingPlaces();setTypesOfTradingPlaces(typesResponse.data.reduce((acc,type)=>({...acc,[type.id]:type}),{}));}catch(error){console.error('Failed to fetch initial data',error);}};const handleChange=e=>{setCriteria({...criteria,[e.target.name]:e.target.value});};const handleSubmit=async e=>{e.preventDefault();fetchTurnoverData(currentPage);};const fetchTurnoverData=async page=>{try{const response=await getOutletTurnover({...criteria,page,limit:recordPerPage});if(response.data.message){setMessage(response.data.message);setTurnoverData([]);setTotalTurnover(0);setTotalPages(0);}else{setMessage('');setTurnoverData(response.data);setTotalTurnover(response.data.length);setTotalPages(Math.ceil(response.data.length/recordPerPage));setCurrentPage(page);}}catch(error){console.error('Failed to fetch turnover data',error);}};const handlePageChange=page=>{fetchTurnoverData(page);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid turnover-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Outlet Turnover\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Start Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"start_date\",value:criteria.start_date,onChange:handleChange,className:\"form-control\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"End Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"end_date\",value:criteria.end_date,onChange:handleChange,className:\"form-control\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Type of Trading Place (optional):\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"type_id\",value:criteria.type_id,onChange:handleChange,className:\"form-control\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Type\"}),Object.entries(typesOfTradingPlaces).map(_ref=>{let[id,type]=_ref;return/*#__PURE__*/_jsx(\"option\",{value:id,children:type.name},id);})]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"btn btn-dark mt-2\",children:\"Search\"})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"mt-4\",children:[\"Total Turnover: \",totalTurnover]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-info mt-4\",children:message}),turnoverData.length>0&&!message&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,variant:\"dark\",className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Outlet Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Turnover\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:turnoverData.map(outlet=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:outlet.outlet_name}),/*#__PURE__*/_jsx(\"td\",{children:outlet.total_quantity}),/*#__PURE__*/_jsx(\"td\",{children:outlet.total_turnover})]},outlet.outlet_id))})]}),/*#__PURE__*/_jsxs(Pagination,{children:[/*#__PURE__*/_jsx(Pagination.First,{onClick:()=>handlePageChange(1),disabled:currentPage===1}),/*#__PURE__*/_jsx(Pagination.Prev,{onClick:()=>handlePageChange(currentPage-1),disabled:currentPage===1}),[...Array(totalPages).keys()].map(page=>/*#__PURE__*/_jsx(Pagination.Item,{active:page+1===currentPage,onClick:()=>handlePageChange(page+1),children:page+1},page+1)),/*#__PURE__*/_jsx(Pagination.Next,{onClick:()=>handlePageChange(currentPage+1),disabled:currentPage===totalPages}),/*#__PURE__*/_jsx(Pagination.Last,{onClick:()=>handlePageChange(totalPages),disabled:currentPage===totalPages})]})]})]});};export default OutletTurnover;","map":{"version":3,"names":["React","useState","useEffect","Button","Table","Form","Pagination","getOutletTurnover","getTypesOfTradingPlaces","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OutletTurnover","criteria","setCriteria","start_date","end_date","type_id","typesOfTradingPlaces","setTypesOfTradingPlaces","turnoverData","setTurnoverData","totalTurnover","setTotalTurnover","currentPage","setCurrentPage","totalPages","setTotalPages","recordPerPage","message","setMessage","fetchInitialData","typesResponse","data","reduce","acc","type","id","error","console","handleChange","e","target","name","value","handleSubmit","preventDefault","fetchTurnoverData","page","response","limit","length","Math","ceil","handlePageChange","className","children","onSubmit","onChange","required","Object","entries","map","_ref","striped","bordered","hover","variant","outlet","outlet_name","total_quantity","total_turnover","outlet_id","First","onClick","disabled","Prev","Array","keys","Item","active","Next","Last"],"sources":["D:/InformationSystemTradingOrganization/frontend/src/components/Outlets/OutletTurnover.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Table, Form, Pagination } from 'react-bootstrap';\r\nimport { getOutletTurnover, getTypesOfTradingPlaces } from '../../services/api';\r\nimport './OutletTurnover.css';\r\n\r\nconst OutletTurnover = () => {\r\n    const [criteria, setCriteria] = useState({\r\n        start_date: '',\r\n        end_date: '',\r\n        type_id: ''\r\n    });\r\n    const [typesOfTradingPlaces, setTypesOfTradingPlaces] = useState({});\r\n    const [turnoverData, setTurnoverData] = useState([]);\r\n    const [totalTurnover, setTotalTurnover] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [recordPerPage] = useState(5);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchInitialData();\r\n    }, []);\r\n\r\n    const fetchInitialData = async () => {\r\n        try {\r\n            const typesResponse = await getTypesOfTradingPlaces();\r\n            setTypesOfTradingPlaces(typesResponse.data.reduce((acc, type) => ({ ...acc, [type.id]: type }), {}));\r\n        } catch (error) {\r\n            console.error('Failed to fetch initial data', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setCriteria({ ...criteria, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        fetchTurnoverData(currentPage);\r\n    };\r\n\r\n    const fetchTurnoverData = async (page) => {\r\n        try {\r\n            const response = await getOutletTurnover({ ...criteria, page, limit: recordPerPage });\r\n            if (response.data.message) {\r\n                setMessage(response.data.message);\r\n                setTurnoverData([]);\r\n                setTotalTurnover(0);\r\n                setTotalPages(0);\r\n            } else {\r\n                setMessage('');\r\n                setTurnoverData(response.data);\r\n                setTotalTurnover(response.data.length);\r\n                setTotalPages(Math.ceil(response.data.length / recordPerPage));\r\n                setCurrentPage(page);\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to fetch turnover data', error);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        fetchTurnoverData(page);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid turnover-container\">\r\n            <h3>Outlet Turnover</h3>\r\n            <Form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Start Date:</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"start_date\"\r\n                        value={criteria.start_date}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>End Date:</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"end_date\"\r\n                        value={criteria.end_date}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Type of Trading Place (optional):</label>\r\n                    <select\r\n                        name=\"type_id\"\r\n                        value={criteria.type_id}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option value=\"\">Select Type</option>\r\n                        {Object.entries(typesOfTradingPlaces).map(([id, type]) => (\r\n                            <option key={id} value={id}>\r\n                                {type.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <Button type=\"submit\" className=\"btn btn-dark mt-2\">Search</Button>\r\n            </Form>\r\n            <h4 className=\"mt-4\">Total Turnover: {totalTurnover}</h4>\r\n            {message && <div className=\"alert alert-info mt-4\">{message}</div>}\r\n            {turnoverData.length > 0 && !message && (\r\n                <>\r\n                    <Table striped bordered hover variant=\"dark\" className=\"mt-2\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Outlet Name</th>\r\n                            <th>Total Quantity</th>\r\n                            <th>Total Turnover</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {turnoverData.map(outlet => (\r\n                            <tr key={outlet.outlet_id}>\r\n                                <td>{outlet.outlet_name}</td>\r\n                                <td>{outlet.total_quantity}</td>\r\n                                <td>{outlet.total_turnover}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Pagination>\r\n                        <Pagination.First onClick={() => handlePageChange(1)} disabled={currentPage === 1} />\r\n                        <Pagination.Prev onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n                        {[...Array(totalPages).keys()].map(page =>\r\n                            <Pagination.Item key={page + 1} active={page + 1 === currentPage} onClick={() => handlePageChange(page + 1)}>\r\n                                {page + 1}\r\n                            </Pagination.Item>\r\n                        )}\r\n                        <Pagination.Next onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n                        <Pagination.Last onClick={() => handlePageChange(totalPages)} disabled={currentPage === totalPages} />\r\n                    </Pagination>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OutletTurnover;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}